{"version":3,"sources":["Components/card/card.component.jsx","Components/card-list/card-list.component.jsx","Components/search-box/search-box.component.jsx","App.js","logo.svg","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","Response","json","users","this","filterdMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,YAAO,SAACC,GAAD,OACpB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,mBACR,mCAAiCL,EAAMI,QAAQE,OAArCN,EAAMI,QAAQE,MACxB,4BAAIN,EAAMI,QAAQG,aCJTC,EAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACCD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACrB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJhBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACtB,uBACCZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAWF,MCqCAG,GC7CA,I,wDDSb,aAAc,IAAD,8BACX,gBAaFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAcF,EAAEG,OAAOC,SAbtC,EAAKC,MAAM,CACTb,SAAS,GACTU,YAAc,IAJL,E,gEAQO,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAASkB,S,+BAOhC,IAAD,EAEwBC,KAAKN,MAA7Bb,EAFA,EAEAA,SAASU,EAFT,EAESA,YACXU,EAAkBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC3CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAElD,OACE,sBAAK9B,UAAU,MAAf,UACA,kDACC,cAAC,EAAD,CACAW,YAAY,iBACZC,aAAce,KAAKf,eAEnB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAhCTI,cEIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.026ac7f3.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css';\r\n\r\nexport const Card = (props) =>(\r\n<div className=\"card-container\">\r\n    <img alt='monster'\r\n         src={`https://robohash.org/${props.monster.id}?size=180x180`}/>\r\n    <h2 key= {props.monster.name} > {props.monster.name}</h2> \r\n    <p>{props.monster.email}</p>\r\n</div>\r\n);","import React from 'react';\r\nimport './card-list.style.css';\r\nimport  {Card} from '../card/card.component';\r\n\r\nexport const CardList = props =>(\r\n    <div className='card-list'>\r\n    {props.monsters.map(monster => (\r\n          <Card key={monster.id} monster={monster} />\r\n          ))}\r\n    </div>\r\n);\r\n   \r\n    ","import React from 'react';\r\nimport './search-box.style.css'\r\n\r\nexport const SearchBox = ({placeholder,handleChange}) => (\r\n   <input\r\n    className='search'\r\n    type='search'\r\n    placeholder={placeholder}\r\n    onChange={ handleChange }\r\n  />\r\n\r\n)","import React,{ Component } from 'react';\n\nimport {CardList} from './Components/card-list/card-list.component';\nimport {SearchBox} from './Components/search-box/search-box.component';\n\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state={\n      monsters:[],\n      searchField : ''\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(Response => Response.json())\n    .then(users => this.setState({monsters:users}))\n  }\n  \n  handleChange = (e) =>{\n    this.setState({searchField : e.target.value});\n  } \n\n  render(){\n\n    const{monsters,searchField} = this.state;\n    var filterdMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n    return(\n      <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n       <SearchBox \n       placeholder='Search Monster'\n       handleChange={this.handleChange}\n       />           \n       <CardList monsters={filterdMonsters} /> \n    </div>\n    )\n  }\n}\nexport default App;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}